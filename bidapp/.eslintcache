[{"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\index.js":"1","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\reportWebVitals.js":"2","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\App.js":"3","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Login\\Login.js":"4","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Register\\Register.js":"5","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\AuthService.js":"6","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\APICallBase.js":"7","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Item\\FrontList.js":"8","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\bar\\navbar.js":"9","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Routes.js":"10","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\ItemService.js":"11","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Login\\LogOut.js":"12","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\BidService.js":"13","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Item\\AddNewItem.js":"14","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\models\\ItemStatusType.js":"15"},{"size":544,"mtime":1611568184380,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":213,"mtime":1611905391470,"results":"19","hashOfConfig":"17"},{"size":3196,"mtime":1611822153396,"results":"20","hashOfConfig":"17"},{"size":4270,"mtime":1611985619758,"results":"21","hashOfConfig":"17"},{"size":852,"mtime":1611899786981,"results":"22","hashOfConfig":"17"},{"size":1191,"mtime":1612030798996,"results":"23","hashOfConfig":"17"},{"size":11091,"mtime":1612085094584,"results":"24","hashOfConfig":"17"},{"size":5063,"mtime":1612068343301,"results":"25","hashOfConfig":"17"},{"size":1578,"mtime":1611906194129,"results":"26","hashOfConfig":"17"},{"size":2025,"mtime":1612090178870,"results":"27","hashOfConfig":"17"},{"size":703,"mtime":1611775540333,"results":"28","hashOfConfig":"17"},{"size":252,"mtime":1611853758249,"results":"29","hashOfConfig":"17"},{"size":11391,"mtime":1612090529181,"results":"30","hashOfConfig":"17"},{"size":127,"mtime":1612086130398,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7kgget",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\index.js",[],["69","70"],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\reportWebVitals.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\App.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Login\\Login.js",["71"],"import react, { Component } from 'react';\r\nimport { Button, Label, Input, Form } from 'reactstrap';\r\nimport './Login.css';\r\nimport { LoginService } from '../../Services/AuthService'\r\nimport Navbar from \"../bar/navbar\";\r\n//import {Cookies } from \"react-cookie\";\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.gotoRegister = this.gotoRegister.bind(this);\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n\r\n    gotoRegister = () => {\r\n        this.props.history.push(\"/Register\");\r\n    }\r\n    handleUserName(text) {\r\n        this.setState({ email: text.target.value });\r\n    }\r\n    handlePassword(text) {\r\n        this.setState({ password: text.target.value });\r\n    }\r\n    login = async (e) => {\r\n        e.preventDefault();\r\n\r\n        var logonParams = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        try {\r\n            var userInfo = await LoginService(logonParams);\r\n            if (userInfo != null) {\r\n                sessionStorage.setItem('token', userInfo.data.token);\r\n                \r\n                this.props.history.push({\r\n                    pathname: '/LoggedUserList',\r\n                    state: { isLoggedin: true }\r\n                  });\r\n                //needs to be test more\r\n                // let d = new Date();\r\n                // d.setTime(d.getTime() + (24 * 60 * 1000));\r\n                // console.log(d)\r\n                // Cookies.set(\"logonToken\", userInfo.data.token, {expires: d });\r\n\r\n                // Cookies.get(\"logonToken\").then((cookie) => {\r\n                //     console.log(cookie);\r\n                //  });\r\n            }\r\n            console.log(userInfo.data)\r\n\r\n        } catch (error) {\r\n            //let errorMsg = (error.cause ? JSON.stringify(error.cause) : \"Error in login request!\");\r\n            //NotificationManager.error(`${errorMsg}`, 'Login');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"login-page\">\r\n                <div>\r\n                    <Navbar />\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form className=\"login-form\" onSubmit={this.login}>\r\n                        <h4><span className=\"font-weight-bold\" ></span></h4>\r\n                        <hr />\r\n                        <Label>User Name</Label>\r\n                        <Input type=\"email\" name=\"userName\" placeholder=\"UserName\" onChange={(text) => { this.handleUserName(text) }} required></Input>\r\n\r\n                        <Label>Password</Label>\r\n                        <Input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(password) => { this.handlePassword(password) }} required />\r\n                        <Button className=\"boto-btn\" type='submit'>Log in</Button>\r\n                    </Form>\r\n                    <Button onClick={this.gotoRegister} type='submit' className=\"boto-btn\">Create new</Button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login)","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Register\\Register.js",["72","73"],"import react, { Component } from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport './Register.css';\r\nimport {RegisterService} from '../../Services/AuthService';\r\nimport Navbar from \"../bar/navbar\";\r\nvar DatePicker = require(\"reactstrap-date-picker\");\r\n\r\n\r\nexport default class Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            dob:'',\r\n            address:''\r\n        };\r\n\r\n       \r\n    }\r\n\r\n    handleEmail(text) {\r\n        this.setState({ email: text.target.value });   \r\n        console.log(text.target.value);     \r\n    }\r\n    handlePassword(text) {\r\n        this.setState({ password: text.target.value });     \r\n        console.log(text.target.value);   \r\n    }\r\n    handleName(text) {\r\n        this.setState({ name: text.target.value });  \r\n        console.log(text.target.value);      \r\n    }\r\n    handleDOB(date) {\r\n        console.log(date);\r\n        this.setState({ dob: date });          \r\n    }\r\n    handleAddress(text) {\r\n         console.log(text.target.value);\r\n        this.setState({ address: text.target.value });   \r\n        console.log(text.target.value);     \r\n    }\r\n    register = async(e)=>{\r\n        e.preventDefault();\r\n\r\n        var registerParams = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            name: this.state.name,\r\n            dob: this.state.dob,\r\n            address: this.state.address            \r\n        }\r\n        console.log(registerParams)\r\n        try {\r\n            var userInfo = await RegisterService(registerParams);\r\n            if (userInfo != null) {   \r\n                this.props.history.push({\r\n                    pathname: '/Login',\r\n                    state: { isLoggedin: false }\r\n                  });               \r\n            }         \r\n            \r\n        } catch(error) {\r\n            //let errorMsg = (error.cause ? JSON.stringify(error.cause) : \"Error in login request!\");\r\n            //NotificationManager.error(`${errorMsg}`, 'Login');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                 <div>\r\n              <Navbar/>\r\n              </div>\r\n                <Form onSubmit={this.register}>\r\n                    <FormGroup row>\r\n                        <Label for=\"email\" sm={2}>Email:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={(text) => { this.handleEmail(text) }} required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"password\" sm={3}>Password:</Label>\r\n                        <Col sm={9}>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter password\" onChange={(text) => { this.handlePassword(text) }} required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"name\" sm={2}>Name:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"name\" name=\"name\" id=\"nameid\" placeholder=\"Enter name\" onChange={(text) => { this.handleName(text) }}  required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"dob\" sm={2}>DOB</Label>\r\n                        <Col sm={10}>\r\n                            <DatePicker dateFormat=\"MM/DD/YYYY\" value ={this.state.dob} onChange={(date) => { this.handleDOB(date) }} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"address\" sm={2}>Address:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"textarea\" name=\"address\" id=\"address\" onChange={(text) => { this.handleAddress(text) }}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <Button>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\AuthService.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\APICallBase.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Item\\FrontList.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import react, { Component } from 'react';\r\nimport Navbar from \"../bar/navbar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { List, message, Avatar, Spin } from 'antd';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nimport { GetAllActiveItems, GetItemsByStatus } from '../../Services/ItemService'\r\nimport { UserValidate, GetUserType } from '../../Services/AuthService'\r\nimport { AddNewbid } from '../../Services/BidService'\r\nimport { Container } from '@material-ui/core';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './FrontList.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Button, Label, Input, Form, Toast, ToastBody, ToastHeader } from 'reactstrap';\r\nimport itemStatus from \"./../../models/ItemStatusType\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { AddNewItem } from '../Item/AddNewItem';\r\n\r\nexport default class FrontList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedin: false,\r\n            data: [],\r\n            loading: false,\r\n            hasMore: true,\r\n            isUserLogged: false,\r\n            bidValue: 0,\r\n            show: true,\r\n            userType: null,\r\n            addItemModalShow: false,\r\n            isUpdate:false,\r\n            updateItemId:null\r\n\r\n        }\r\n        this.isLoggedOnUser = this.isLoggedOnUser.bind(this);\r\n        this.getUserType = this.getUserType.bind(this);\r\n        this.handleOnHide = this.handleOnHide.bind(this);\r\n        //this.goToEditItem = this.goToEditItem.bind(this);\r\n        //this.getAllItems();\r\n    }\r\n\r\n\r\n    async componentDidUpdate() {\r\n        //this.getAllItems();\r\n       // await this.getAllItems();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.isLoggedOnUser();\r\n        await this.getUserType();\r\n        await this.getAllItems();\r\n    }\r\n\r\n    isLoggedOnUser = async () => {\r\n        try {\r\n            var isUserLogged = await UserValidate();\r\n            this.setState({ isUserLogged: isUserLogged });\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    getAllItems = async () => {\r\n        try {\r\n            //var statusList = itemStatus.NEW  + \",\" +  itemStatus.ACTIVE ;\r\n            console.log(this.state.userType)\r\n            let itemList;\r\n            if (this.state.userType == 1) {\r\n                var statusList = itemStatus.NEW + \",\" + itemStatus.ACTIVE;\r\n                itemList = await GetItemsByStatus(statusList);\r\n            }\r\n            else if (this.state.userType == 2) {\r\n                var statusList = itemStatus.NEW;\r\n                itemList = await GetItemsByStatus(statusList);\r\n            } else {\r\n                itemList = await GetAllActiveItems();\r\n            }\r\n\r\n            //var itemList = await GetItemsByStatus(statusList);\r\n\r\n            this.setState({ data: itemList.data, loading: true });\r\n            console.log(this.state.data);\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    handleOnHide(closeModal) {\r\n        //console.log(closeModal)\r\n        this.setState({\r\n          addItemModalShow: false\r\n        })\r\n      }\r\n\r\n    addNewBid = async (val, title) => {\r\n\r\n        try {\r\n\r\n            var bidParams = {\r\n                bidValue: this.state.bidValue,\r\n                ItemId: val\r\n            }\r\n            let bidVal = await AddNewbid(bidParams);\r\n            if (bidVal.data.success) {\r\n                console.log(title);\r\n                NotificationManager.success(\"New bid is added to the item - \" + title);\r\n            } else {\r\n                NotificationManager.error(\"Failed to add bid for item - \" + title);\r\n            }\r\n            console.log(bidVal.data.success);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    getUserType = async () => {\r\n        try {\r\n            var userType = await GetUserType();\r\n            this.setState({ userType: userType.data });\r\n        } catch (error) {\r\n            if (error.statuscode === 401) {\r\n                console.log(\"user not logged in.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBidVlaue(text) {\r\n        this.setState({ bidValue: text.target.value });\r\n    }\r\n\r\n    goToEditItem = async (itemId) => {\r\n       // let answer = itemId;\r\n        console.log(itemId)\r\n        // if (this.prevstate.itemId === itemId) {\r\n        //     answer = this.state.v1 + this.state.xxxxx;\r\n        //     console.log(\"and the answer is :\" + answer);\r\n        // }\r\n        this.setState({ \r\n            addItemModalShow: true,\r\n            isUpdate:true\r\n            //updateItemId:itemId\r\n         })\r\n         this.setState({ updateItemId:itemId }, () => {\r\n            console.log(this.state.updateItemId, 'dealersOverallTotal1');\r\n          }); \r\n        console.log(this.state.updateItemId)\r\n      }\r\n\r\n    //   deAnswer = () => {\r\n    //     let answer = 0;\r\n    //     if (this.state.isCal === \"add\") {\r\n    //         answer = this.state.v1 + this.state.xxxxx;\r\n    //         console.log(\"and the answer is :\" + answer);\r\n    //     }\r\n    \r\n    //     this.setState({\r\n    //         v2: this.state.v1,\r\n    //         answer: answer,\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n\r\n        // const isLoggedIn = this.state.isUserLogged;\r\n        // console.log(isLoggedIn)\r\n        // let button;\r\n        // if (isLoggedIn.data) {\r\n        //     button = <div><button onClick={(val)=>this.addNewBid(val)} >Add bid</button> <input type=\"text\" onChange={(text) => this.handleBidVlaue(text)} /></div>;\r\n        // }\r\n        return (\r\n            <div >\r\n\r\n                <div>\r\n                    <Navbar />\r\n                </div>\r\n\r\n                {this.state.data == null || this.state.data.length == 0\r\n                    ?\r\n                    <div className=\"center-title\">\r\n                        <h3>Oops. No Items to bid  :-( </h3>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className=\"center-title\">\r\n                            <h3 >Item list</h3>\r\n                        </div>\r\n\r\n                        <div className=\"loading-container\">\r\n                            <InfiniteScroll\r\n                                initialLoad={false}\r\n                                pageStart={0}\r\n                                loadMore={this.getAllItems}\r\n                                hasMore={!this.state.loading && this.state.hasMore}\r\n                                useWindow={false}\r\n                            >\r\n                                <List\r\n\r\n                                    dataSource={this.state.data}\r\n                                    itemLayout=\"vertical\"\r\n                                    renderItem={item => (\r\n                                        <List.Item key={item.itemId}>\r\n                                            <List.Item.Meta\r\n                                                title={item.itemTitle}\r\n                                                description={item.itemSubTitle}\r\n\r\n                                            // avatar={<Avatar src={item} shape=\"square\" size={48} />}\r\n                                            //avatar={ <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" shape=\"square\" size={10}/>}\r\n                                            />\r\n                                            <div>{item.itemDescription}</div>\r\n                                            {/* <div>Bidding status : {itemStatus[item.itemStatus]} </div> */}\r\n                                            <div>Bidding status : {item.itemStatus} </div>\r\n                                            {/* <div>{button} </div> */}\r\n                                            <div>{this.state.isUserLogged ?\r\n                                                <div>\r\n                                                    {this.state.userType == 2 && this.state.userType != null ?\r\n                                                        <div>\r\n                                                            <button onClick={() => this.addNewBid(item.itemId, item.itemTitle)} >Add bid</button>\r\n                                                            <input type=\"number\" name=\"bidValue\" onChange={(text) => this.handleBidVlaue(text)} />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div>\r\n                                                            <button onClick={() =>this.goToEditItem(item.itemId)} >Edit bid</button>\r\n                                                        </div>\r\n                                                    }\r\n\r\n                                                    {/* <button onClick={() => this.addNewBid(item.itemId, item.itemTitle)} >Add bid</button>\r\n                                        <input type=\"number\" name=\"bidValue\" onChange={(text) => this.handleBidVlaue(text)} /> */}\r\n                                                    {/* <Toast  show={this.state.show} delay={100} autohide>\r\n                                            <ToastHeader>\r\n                                                Reactstrap\r\n                                               </ToastHeader>\r\n                                            <ToastBody>\r\n                                                This is a toast on a white background — check it out!\r\n                                                  </ToastBody>\r\n                                        </Toast> */}\r\n\r\n                                                </div>\r\n                                                : <div></div>\r\n                                            }\r\n                                            </div>\r\n                                            <Divider style={{ backgroundColor: \"lightblue\", margin: \"75px 0px\" }} />\r\n                                        </List.Item>\r\n\r\n                                    )}\r\n                                >\r\n\r\n                                    {this.state.loading && this.state.hasMore && (\r\n                                        <div className=\"loading-container2\">\r\n                                            <Spin />\r\n                                        </div>\r\n                                    )}\r\n                                </List>\r\n                            </InfiniteScroll>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.state.addItemModalShow ? <AddNewItem\r\n                    show={this.state.addItemModalShow}\r\n                    isUpdate {...this.state.isUpdate}\r\n                    onHide={this.handleOnHide} \r\n                    itemId = {this.state.updateItemId}\r\n                   /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\bar\\navbar.js",["94","95","96","97","98"],"import react, { Component } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { UserValidate, Logout, GetUserType } from '../../Services/AuthService'\r\nimport { createHashHistory } from \"history\";\r\nimport './navbar.css';\r\nimport { withRouter } from 'react-router';\r\nimport { AddNewItem } from '../Item/AddNewItem';\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isLoggedin: false,\r\n      addItemModalShow: false,\r\n      userType: null\r\n    }\r\n\r\n    this.isLoggedOnUser = this.isLoggedOnUser.bind(this);\r\n    this.goToAddItem = this.goToAddItem.bind(this);\r\n    this.getUserType = this.getUserType.bind(this);\r\n    this.handleOnHide = this.handleOnHide.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.isLoggedOnUser();\r\n    await this.getUserType();\r\n\r\n  }\r\n\r\n  isLoggedOnUser = async () => {\r\n    try {\r\n      var isUserLogged = await UserValidate();\r\n      console.log(isUserLogged)\r\n      if (isUserLogged != null) {\r\n        this.setState({ isLoggedin: isUserLogged });\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  getUserType = async () => {\r\n    try {\r\n      var userType = await GetUserType();\r\n      this.setState({ userType: userType.data })\r\n      console.log(userType.data)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    Logout();\r\n    const history = createHashHistory();\r\n    history.go(\"/\");\r\n  }\r\n\r\n  goToAddItem = () => {\r\n    this.setState({ addItemModalShow: true })\r\n    //console.log(this.state.addItemModalShow)\r\n  }\r\n\r\n  handleOnHide(closeModal) {\r\n    //console.log(closeModal)\r\n    this.setState({\r\n      addItemModalShow: false\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    // const isLoggedIn = this.state.isLoggedin;\r\n    // console.log(isLoggedIn)\r\n    // let nav;\r\n    // if (isLoggedIn.data) {\r\n    //   nav = <ul className=\"navbar-nav ml-auto\">\r\n    //     <li className=\"nav-item\">\r\n\r\n    //       <button onClick={this.Logout}>Sign out</button>\r\n    //       {/* <div className=\"nav-link\"> </div> */}\r\n    //       {/* <Link className=\"nav-link\" to={\"/LogOut\"}>Sign Out</Link> */}\r\n    //     </li>\r\n    //   </ul>;\r\n    // }\r\n    // else {\r\n\r\n    //   nav = <ul className=\"navbar-nav ml-auto\">\r\n    //     <li className=\"nav-item\">\r\n    //       <Link className=\"nav-link\" to={\"/Login\"}>Sign in</Link>\r\n    //     </li>\r\n    //     <li className=\"nav-item\">\r\n    //       <Link className=\"nav-link\" to={\"/Register\"}>Sign up</Link>\r\n    //     </li>\r\n    //   </ul>;\r\n    // }\r\n\r\n\r\n    return (\r\n      <div style={{ margin: '10px' }}>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to={\"/\"}>BidExpress</Link>\r\n            <div className=\"collapse navbar-collapse\">\r\n              {/* {nav} */}\r\n              {\r\n                this.state.isLoggedin.data ?\r\n                  <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                      {\r\n                        this.state.userType == 1 && this.state.userType != null ?\r\n                          <button className=\"btn-style\" onClick={this.goToAddItem}>Add New Item </button> :\r\n                          <div></div>\r\n                      }\r\n                      {/* <button className=\"btn-style\" onClick={this.goToAddItem}>Add New Item </button> */}\r\n                      {/* <Link className=\"nav-link\" to={\"/AddItem\"}>Add New</Link> */}\r\n                      <button onClick={this.logout}>Sign out</button>\r\n                      {/* <div className=\"nav-link\"> </div> */}\r\n                      {/* <Link className=\"nav-link\" to={\"/LogOut\"}>Sign Out</Link> */}\r\n                    </li>\r\n                  </ul>\r\n                  :\r\n                  <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to={\"/Login\"}>Sign in</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to={\"/Register\"}>Sign up</Link>\r\n                    </li>\r\n                  </ul>\r\n\r\n\r\n              }\r\n              {/* <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/Login\"}>Sign in</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/Register\"}>Sign up</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/LogOut\"}>Sign Out</Link>\r\n              </li>\r\n            </ul> */}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n\r\n        {this.state.addItemModalShow ? <AddNewItem\r\n          show={this.state.addTagsModalShow}\r\n          onHide={this.handleOnHide} /> : null}\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\nexport default withRouter(Navbar)","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Routes.js",["99","100"],"import React, { useEffect } from 'react';\r\nimport { BrowserRouter, useHistory } from 'react-router-dom';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport AddNewItem from './Components/Item/AddNewItem';\r\n\r\nimport Login from './Components/Login/Login';\r\nimport Register from './Components/Register/Register';\r\nimport FrontList from './Components/Item/FrontList';\r\n\r\nfunction CheckLogOnStatus() {\r\n    let token = sessionStorage.getItem('token');\r\n    //console.log(token)\r\n    if (token) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            (CheckLogOnStatus())\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to={{\r\n                    pathname: '/Login',\r\n                    state: { from: props.location }\r\n                }} />)\r\n        )} />);\r\n}\r\n\r\nconst Routes = () => {\r\n    console.log('Application running in ' + process.env.NODE_ENV + ' mode');\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>            \r\n                <Route exact path=\"/Login\"><Login /></Route>\r\n                <Route path='/Register' component={Register} />\r\n                <PrivateRoute path='/AddItem' component={AddNewItem} />\r\n                <Route path='/' component={FrontList} />                \r\n                <PrivateRoute path='/LoggedUserList' component={FrontList} />\r\n                \r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\ItemService.js",["101"],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Login\\LogOut.js",[],["102","103"],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\BidService.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Item\\AddNewItem.js",["104","105","106","107","108","109","110","111","112","113"],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\models\\ItemStatusType.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":2,"column":54,"nodeType":"120","messageId":"121","endLine":2,"endColumn":62},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"123","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":20},{"ruleId":"118","severity":1,"message":"124","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"125","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":20},{"ruleId":"118","severity":1,"message":"126","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":21},{"ruleId":"118","severity":1,"message":"127","line":8,"column":16,"nodeType":"120","messageId":"121","endLine":8,"endColumn":23},{"ruleId":"118","severity":1,"message":"128","line":8,"column":25,"nodeType":"120","messageId":"121","endLine":8,"endColumn":31},{"ruleId":"118","severity":1,"message":"129","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":19},{"ruleId":"118","severity":1,"message":"130","line":18,"column":10,"nodeType":"120","messageId":"121","endLine":18,"endColumn":16},{"ruleId":"118","severity":1,"message":"131","line":18,"column":18,"nodeType":"120","messageId":"121","endLine":18,"endColumn":23},{"ruleId":"118","severity":1,"message":"132","line":18,"column":25,"nodeType":"120","messageId":"121","endLine":18,"endColumn":30},{"ruleId":"118","severity":1,"message":"133","line":18,"column":32,"nodeType":"120","messageId":"121","endLine":18,"endColumn":36},{"ruleId":"118","severity":1,"message":"134","line":18,"column":38,"nodeType":"120","messageId":"121","endLine":18,"endColumn":43},{"ruleId":"118","severity":1,"message":"135","line":18,"column":45,"nodeType":"120","messageId":"121","endLine":18,"endColumn":54},{"ruleId":"118","severity":1,"message":"136","line":18,"column":56,"nodeType":"120","messageId":"121","endLine":18,"endColumn":67},{"ruleId":"137","severity":1,"message":"138","line":73,"column":37,"nodeType":"139","messageId":"140","endLine":73,"endColumn":39},{"ruleId":"137","severity":1,"message":"138","line":77,"column":42,"nodeType":"139","messageId":"140","endLine":77,"endColumn":44},{"ruleId":"141","severity":1,"message":"142","line":78,"column":21,"nodeType":"120","messageId":"143","endLine":78,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":183,"column":68,"nodeType":"139","messageId":"140","endLine":183,"endColumn":70},{"ruleId":"137","severity":1,"message":"138","line":221,"column":74,"nodeType":"139","messageId":"140","endLine":221,"endColumn":76},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"144","line":3,"column":27,"nodeType":"120","messageId":"121","endLine":3,"endColumn":33},{"ruleId":"118","severity":1,"message":"145","line":3,"column":35,"nodeType":"120","messageId":"121","endLine":3,"endColumn":41},{"ruleId":"118","severity":1,"message":"146","line":3,"column":43,"nodeType":"120","messageId":"121","endLine":3,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":111,"column":45,"nodeType":"139","messageId":"140","endLine":111,"endColumn":47},{"ruleId":"118","severity":1,"message":"147","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"148","line":2,"column":25,"nodeType":"120","messageId":"121","endLine":2,"endColumn":35},{"ruleId":"118","severity":1,"message":"149","line":73,"column":7,"nodeType":"120","messageId":"121","endLine":73,"endColumn":13},{"ruleId":"114","replacedBy":"150"},{"ruleId":"116","replacedBy":"151"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":2,"column":54,"nodeType":"120","messageId":"121","endLine":2,"endColumn":62},{"ruleId":"118","severity":1,"message":"152","line":3,"column":26,"nodeType":"120","messageId":"121","endLine":3,"endColumn":37},{"ruleId":"118","severity":1,"message":"153","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"154","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":20},{"ruleId":"118","severity":1,"message":"155","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":16},{"ruleId":"141","severity":1,"message":"156","line":138,"column":21,"nodeType":"120","messageId":"143","endLine":138,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":183,"column":26,"nodeType":"139","messageId":"140","endLine":183,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":191,"column":13,"nodeType":"159","endLine":191,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":194,"column":13,"nodeType":"159","endLine":194,"endColumn":23},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","'makeStyles' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'message' is defined but never used.","'Avatar' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'Toast' is defined but never used.","'ToastBody' is defined but never used.","'ToastHeader' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'statusList' is already defined.","redeclared","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'params' is assigned a value but never used.",["160"],["161"],"'UploadImage' is defined but never used.","'Navbar' is defined but never used.","'withRouter' is defined but never used.","'Dropdown' is defined but never used.","'itemParams' is already defined.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]