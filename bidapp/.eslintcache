[{"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\index.js":"1","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\reportWebVitals.js":"2","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\App.js":"3","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Login\\Login.js":"4","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Register\\Register.js":"5","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\AuthService.js":"6","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\APICallBase.js":"7"},{"size":544,"mtime":1611568184380,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1353,"mtime":1612090722880,"results":"11","hashOfConfig":"9"},{"size":2326,"mtime":1612090722887,"results":"12","hashOfConfig":"9"},{"size":3945,"mtime":1612090722894,"results":"13","hashOfConfig":"9"},{"size":736,"mtime":1612090722907,"results":"14","hashOfConfig":"9"},{"size":678,"mtime":1612090722900,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7kgget",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\index.js",[],["33","34"],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\reportWebVitals.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\App.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Login\\Login.js",["35"],"import react, { Component } from 'react';\r\nimport { Button, Label, Input, Form } from 'reactstrap';\r\nimport './Login.css';\r\nimport { LoginService } from '../../Services/AuthService'\r\nimport Navbar from \"../bar/navbar\";\r\n//import {Cookies } from \"react-cookie\";\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.gotoRegister = this.gotoRegister.bind(this);\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n\r\n    gotoRegister = () => {\r\n        this.props.history.push(\"/Register\");\r\n    }\r\n    handleUserName(text) {\r\n        this.setState({ email: text.target.value });\r\n    }\r\n    handlePassword(text) {\r\n        this.setState({ password: text.target.value });\r\n    }\r\n    login = async (e) => {\r\n        e.preventDefault();\r\n\r\n        var logonParams = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        try {\r\n            var userInfo = await LoginService(logonParams);\r\n            if (userInfo != null) {\r\n                sessionStorage.setItem('token', userInfo.data.token);\r\n                \r\n                this.props.history.push({\r\n                    pathname: '/LoggedUserList',\r\n                    state: { isLoggedin: true }\r\n                  });\r\n                //needs to be test more\r\n                // let d = new Date();\r\n                // d.setTime(d.getTime() + (24 * 60 * 1000));\r\n                // console.log(d)\r\n                // Cookies.set(\"logonToken\", userInfo.data.token, {expires: d });\r\n\r\n                // Cookies.get(\"logonToken\").then((cookie) => {\r\n                //     console.log(cookie);\r\n                //  });\r\n            }\r\n            console.log(userInfo.data)\r\n\r\n        } catch (error) {\r\n            //let errorMsg = (error.cause ? JSON.stringify(error.cause) : \"Error in login request!\");\r\n            //NotificationManager.error(`${errorMsg}`, 'Login');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"login-page\">\r\n                <div>\r\n                    <Navbar />\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form className=\"login-form\" onSubmit={this.login}>\r\n                        <h4><span className=\"font-weight-bold\" ></span></h4>\r\n                        <hr />\r\n                        <Label>User Name</Label>\r\n                        <Input type=\"email\" name=\"userName\" placeholder=\"UserName\" onChange={(text) => { this.handleUserName(text) }} required></Input>\r\n\r\n                        <Label>Password</Label>\r\n                        <Input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(password) => { this.handlePassword(password) }} required />\r\n                        <Button className=\"boto-btn\" type='submit'>Log in</Button>\r\n                    </Form>\r\n                    <Button onClick={this.gotoRegister} type='submit' className=\"boto-btn\">Create new</Button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login)","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Components\\Register\\Register.js",["36","37"],"import react, { Component } from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport './Register.css';\r\nimport {RegisterService} from '../../Services/AuthService';\r\nimport Navbar from \"../bar/navbar\";\r\nvar DatePicker = require(\"reactstrap-date-picker\");\r\n\r\n\r\nexport default class Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            dob:'',\r\n            address:''\r\n        };\r\n\r\n       \r\n    }\r\n\r\n    handleEmail(text) {\r\n        this.setState({ email: text.target.value });   \r\n        console.log(text.target.value);     \r\n    }\r\n    handlePassword(text) {\r\n        this.setState({ password: text.target.value });     \r\n        console.log(text.target.value);   \r\n    }\r\n    handleName(text) {\r\n        this.setState({ name: text.target.value });  \r\n        console.log(text.target.value);      \r\n    }\r\n    handleDOB(date) {\r\n        console.log(date);\r\n        this.setState({ dob: date });          \r\n    }\r\n    handleAddress(text) {\r\n         console.log(text.target.value);\r\n        this.setState({ address: text.target.value });   \r\n        console.log(text.target.value);     \r\n    }\r\n    register = async(e)=>{\r\n        e.preventDefault();\r\n\r\n        var registerParams = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            name: this.state.name,\r\n            dob: this.state.dob,\r\n            address: this.state.address            \r\n        }\r\n        console.log(registerParams)\r\n        try {\r\n            var userInfo = await RegisterService(registerParams);\r\n            if (userInfo != null) {   \r\n                this.props.history.push({\r\n                    pathname: '/Login',\r\n                    state: { isLoggedin: false }\r\n                  });               \r\n            }         \r\n            \r\n        } catch(error) {\r\n            //let errorMsg = (error.cause ? JSON.stringify(error.cause) : \"Error in login request!\");\r\n            //NotificationManager.error(`${errorMsg}`, 'Login');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                 <div>\r\n              <Navbar/>\r\n              </div>\r\n                <Form onSubmit={this.register}>\r\n                    <FormGroup row>\r\n                        <Label for=\"email\" sm={2}>Email:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={(text) => { this.handleEmail(text) }} required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"password\" sm={3}>Password:</Label>\r\n                        <Col sm={9}>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter password\" onChange={(text) => { this.handlePassword(text) }} required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"name\" sm={2}>Name:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"name\" name=\"name\" id=\"nameid\" placeholder=\"Enter name\" onChange={(text) => { this.handleName(text) }}  required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"dob\" sm={2}>DOB</Label>\r\n                        <Col sm={10}>\r\n                            <DatePicker dateFormat=\"MM/DD/YYYY\" value ={this.state.dob} onChange={(date) => { this.handleDOB(date) }} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"address\" sm={2}>Address:</Label>\r\n                        <Col sm={10}>\r\n                            <Input type=\"textarea\" name=\"address\" id=\"address\" onChange={(text) => { this.handleAddress(text) }}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <Button>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\AuthService.js",[],"D:\\Projects\\Assessment\\BidSystem\\bidapp\\src\\Services\\APICallBase.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":2,"column":54,"nodeType":"44","messageId":"45","endLine":2,"endColumn":62},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","no-global-assign","no-unsafe-negation"]